apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

version = "1.5.0"
group = 'com.github.isaintmartin'

def siteUrl = 'https://github.com/spongebobrf/MaterialIntroTutorial'
def gitUrl = 'https://github.com/spongebobrf/MaterialIntroTutorial.git'

android {
    compileSdkVersion 24
    buildToolsVersion '25.0.0'

    defaultConfig {
        minSdkVersion 11
        targetSdkVersion 24
        versionCode 9
        versionName version
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    final SUPPORT_LIBRARY_VERSION = '24.2.1'

    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile "com.android.support:appcompat-v7:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:percent:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:support-annotations:$SUPPORT_LIBRARY_VERSION"
    compile 'com.github.bumptech.glide:glide:3.7.0'
}


if (hasProperty("BINTRAY_USER")){
    bintray {
        user = BINTRAY_USER
        key = BINTRAY_KEY

        configurations = ['archives']
        pkg {
            repo = "maven"
            name = "MaterialIntroTutorial"
            websiteUrl = siteUrl
            vcsUrl = gitUrl
            licenses = ["Apache-2.0"]
            publish = true
        }
    }


    install {
        repositories.mavenInstaller {
            pom {
                project {
                    packaging 'aar'

                    name 'Android Library for a material intro tutorial'
                    url siteUrl
                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id 'riggaroo'
                            name 'Rebecca Franks'
                            email 'franks.rebecca@gmail.com'
                        }
                    }
                    scm {
                        connection gitUrl
                        developerConnection gitUrl
                        url siteUrl

                    }
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

task findConventions << {
    println project.getConvention()
}

task wrapper(type: Wrapper) {
}
